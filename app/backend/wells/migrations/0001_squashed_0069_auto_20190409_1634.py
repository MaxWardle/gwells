# Generated by Django 2.1.8 on 2019-04-09 22:35

import datetime
from decimal import Decimal
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
from django.utils.timezone import utc
import uuid
import wells.data_migrations


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('aquifers', '0008_alter_sequence'),
        ('registries', '0001_squashed_0012_auto_20180704_2105'),
        ('registries', '0013_auto_20180712_2107'),
        ('aquifers', '0018_auto_20190409_1634'),
        ('submissions', '0001_initial'),
        ('gwells', '0001_squashed_0009_auto_20181116_2316'),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='ActivitySubmission',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('filing_number', models.AutoField(primary_key=True, serialize=False)),
                        ('activity_submission_guid', models.UUIDField(default=uuid.uuid4, editable=False)),
                        ('driller_name', models.CharField(blank=True, max_length=200, verbose_name='Name of Person Who Did the Work')),
                        ('consultant_name', models.CharField(blank=True, max_length=200, verbose_name='Consultant Name')),
                        ('consultant_company', models.CharField(blank=True, max_length=200, verbose_name='Consultant Company')),
                        ('work_start_date', models.DateField(verbose_name='Work Start Date')),
                        ('work_end_date', models.DateField(verbose_name='Work End Date')),
                        ('owner_full_name', models.CharField(max_length=200, verbose_name='Owner Name')),
                        ('owner_mailing_address', models.CharField(max_length=100, verbose_name='Mailing Address')),
                        ('owner_city', models.CharField(max_length=100, verbose_name='Town/City')),
                        ('owner_postal_code', models.CharField(blank=True, max_length=10, verbose_name='Postal Code')),
                        ('street_address', models.CharField(blank=True, max_length=100, verbose_name='Street Address')),
                        ('city', models.CharField(blank=True, max_length=50, verbose_name='Town/City')),
                        ('legal_lot', models.CharField(blank=True, max_length=10, verbose_name='Lot')),
                        ('legal_plan', models.CharField(blank=True, max_length=20, verbose_name='Plan')),
                        ('legal_district_lot', models.CharField(blank=True, max_length=20, verbose_name='District Lot')),
                        ('legal_block', models.CharField(blank=True, max_length=10, verbose_name='Block')),
                        ('legal_section', models.CharField(blank=True, max_length=10, verbose_name='Section')),
                        ('legal_township', models.CharField(blank=True, max_length=20, verbose_name='Township')),
                        ('legal_range', models.CharField(blank=True, max_length=10, verbose_name='Range')),
                        ('legal_pid', models.PositiveIntegerField(blank=True, null=True, verbose_name='PID')),
                        ('well_location_description', models.CharField(blank=True, max_length=500, verbose_name='Well Location Description')),
                        ('identification_plate_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Identification Plate Number')),
                        ('well_plate_attached', models.CharField(blank=True, max_length=500, verbose_name='Well Identification Plate Is Attached')),
                        ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=8, null=True)),
                        ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                        ('ground_elevation', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Ground Elevation')),
                        ('other_drilling_method', models.CharField(blank=True, max_length=50, verbose_name='Specify Other Drilling Method')),
                        ('well_orientation', models.BooleanField(choices=[(True, 'vertical'), (False, 'horizontal')], default=True, verbose_name='Orientation of Well')),
                        ('water_supply_system_name', models.CharField(blank=True, max_length=50, verbose_name='Water Supply System Name')),
                        ('water_supply_system_well_name', models.CharField(blank=True, max_length=50, verbose_name='Water Supply System Well Name')),
                        ('surface_seal_depth', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Surface Seal Depth')),
                        ('surface_seal_thickness', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('1.00'))], verbose_name='Surface Seal Thickness')),
                        ('backfill_above_surface_seal', models.CharField(blank=True, max_length=250, verbose_name='Backfill Material Above Surface Seal')),
                        ('backfill_above_surface_seal_depth', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Backfill Depth')),
                        ('liner_diameter', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Liner Diameter')),
                        ('liner_thickness', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Liner Thickness')),
                        ('liner_from', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Liner From')),
                        ('liner_to', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Liner To')),
                        ('other_screen_material', models.CharField(blank=True, max_length=50, verbose_name='Specify Other Screen Material')),
                        ('other_screen_bottom', models.CharField(blank=True, max_length=50, verbose_name='Specify Other Screen Bottom')),
                        ('filter_pack_from', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Filter Pack From')),
                        ('filter_pack_to', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Filter Pack To')),
                        ('filter_pack_thickness', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Filter Pack Thickness')),
                        ('development_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Development Total Duration')),
                        ('development_notes', models.CharField(blank=True, max_length=255, verbose_name='Development Notes')),
                        ('water_quality_colour', models.CharField(blank=True, max_length=60, verbose_name='Water Quality Colour')),
                        ('water_quality_odour', models.CharField(blank=True, max_length=60, verbose_name='Water Quality Odour')),
                        ('total_depth_drilled', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Total Depth Drilled')),
                        ('finished_well_depth', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Finished Well Depth')),
                        ('final_casing_stick_up', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, verbose_name='Final Casing Stick Up')),
                        ('bedrock_depth', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Depth to Bedrock')),
                        ('static_water_level', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Static Water Level (BTOC)')),
                        ('well_yield', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='Estimated Well Yield')),
                        ('artesian_flow', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Artesian Flow')),
                        ('artesian_pressure', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Artesian Pressure')),
                        ('well_cap_type', models.CharField(blank=True, max_length=40, verbose_name='Well Cap Type')),
                        ('well_disinfected', models.BooleanField(choices=[(False, 'No'), (True, 'Yes')], default=False, verbose_name='Well Disinfected?')),
                        ('comments', models.CharField(blank=True, max_length=3000)),
                        ('alternative_specs_submitted', models.BooleanField(default=False, verbose_name='Alternative specs submitted (if required)')),
                        ('diameter', models.CharField(blank=True, max_length=9)),
                    ],
                    options={
                        'db_table': 'activity_submission',
                    },
                ),
                migrations.CreateModel(
                    name='AquiferWell',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('aquifer_well_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                        ('aquifer_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Aquifer Number')),
                    ],
                    options={
                        'db_table': 'aquifer_well',
                    },
                ),
                migrations.CreateModel(
                    name='BCGS_Numbers',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('bcgs_id', models.BigIntegerField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                        ('bcgs_number', models.CharField(max_length=20, verbose_name='BCGS Mapsheet Number')),
                    ],
                    options={
                        'db_table': 'bcgs_number',
                        'ordering': ['bcgs_number'],
                    },
                ),
                migrations.CreateModel(
                    name='Casing',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('casing_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                        ('casing_from', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='From')),
                        ('casing_to', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='To')),
                        ('diameter', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.5'))], verbose_name='Diameter')),
                        ('wall_thickness', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Wall Thickness')),
                        ('drive_shoe', models.NullBooleanField(choices=[(False, 'No'), (True, 'Yes')], default=False, verbose_name='Drive Shoe')),
                        ('activity_submission', models.ForeignKey(blank=True, db_column='filing_number', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.ActivitySubmission')),
                    ],
                    options={
                        'db_table': 'casing',
                        'ordering': ['casing_from', 'casing_to'],
                    },
                ),
                migrations.CreateModel(
                    name='CasingCode',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('casing_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                        ('description', models.CharField(max_length=100)),
                        ('display_order', models.PositiveIntegerField()),
                        ('effective_date', models.DateTimeField(blank=True, null=True)),
                        ('expiry_date', models.DateTimeField(blank=True, null=True)),
                    ],
                    options={
                        'db_table': 'casing_code',
                        'ordering': ['display_order', 'description'],
                    },
                ),
                migrations.CreateModel(
                    name='CasingMaterialCode',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('casing_material_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                        ('description', models.CharField(max_length=100)),
                        ('display_order', models.PositiveIntegerField()),
                        ('effective_date', models.DateTimeField(blank=True, null=True)),
                        ('expiry_date', models.DateTimeField(blank=True, null=True)),
                    ],
                    options={
                        'db_table': 'casing_material_code',
                        'ordering': ['display_order', 'description'],
                    },
                ),
                migrations.CreateModel(
                    name='DecommissionMethodCode',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('decommission_method_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False, verbose_name='Code')),
                        ('description', models.CharField(max_length=255, verbose_name='Description')),
                        ('display_order', models.PositiveIntegerField()),
                        ('effective_date', models.DateTimeField(blank=True, null=True)),
                        ('expiry_date', models.DateTimeField(blank=True, null=True)),
                    ],
                    options={
                        'db_table': 'decommission_method_code',
                        'ordering': ['display_order'],
                    },
                ),
                migrations.CreateModel(
                    name='DevelopmentMethodCode',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('development_method_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                        ('description', models.CharField(max_length=100)),
                        ('display_order', models.PositiveIntegerField()),
                        ('effective_date', models.DateTimeField(blank=True, null=True)),
                        ('expiry_date', models.DateTimeField(blank=True, null=True)),
                    ],
                    options={
                        'db_table': 'development_method_code',
                        'ordering': ['display_order', 'description'],
                    },
                ),
                migrations.CreateModel(
                    name='DrillingCompany',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('drilling_company_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                        ('drilling_company_code', models.CharField(blank=True, max_length=10, null=True)),
                        ('name', models.CharField(max_length=200)),
                    ],
                    options={
                        'verbose_name_plural': 'Drilling Companies',
                        'db_table': 'drilling_company',
                    },
                ),
                migrations.CreateModel(
                    name='DrillingMethodCode',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('drilling_method_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                        ('description', models.CharField(max_length=100)),
                        ('display_order', models.PositiveIntegerField()),
                        ('effective_date', models.DateTimeField(blank=True, null=True)),
                        ('expiry_date', models.DateTimeField(blank=True, null=True)),
                    ],
                    options={
                        'db_table': 'drilling_method_code',
                        'ordering': ['display_order', 'description'],
                    },
                ),
                migrations.CreateModel(
                    name='FilterPackMaterialCode',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('filter_pack_material_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                        ('description', models.CharField(max_length=100)),
                        ('display_order', models.PositiveIntegerField()),
                        ('effective_date', models.DateTimeField(blank=True, null=True)),
                        ('expiry_date', models.DateTimeField(blank=True, null=True)),
                    ],
                    options={
                        'db_table': 'filter_pack_material_code',
                        'ordering': ['display_order', 'description'],
                    },
                ),
                migrations.CreateModel(
                    name='FilterPackMaterialSizeCode',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('filter_pack_material_size_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                        ('description', models.CharField(max_length=100)),
                        ('display_order', models.PositiveIntegerField()),
                        ('effective_date', models.DateTimeField(blank=True, null=True)),
                        ('expiry_date', models.DateTimeField(blank=True, null=True)),
                    ],
                    options={
                        'db_table': 'filter_pack_material_size_code',
                        'ordering': ['display_order', 'description'],
                    },
                ),
                migrations.CreateModel(
                    name='GroundElevationMethodCode',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('ground_elevation_method_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                        ('description', models.CharField(max_length=100)),
                        ('display_order', models.PositiveIntegerField()),
                        ('effective_date', models.DateTimeField(blank=True, null=True)),
                        ('expiry_date', models.DateTimeField(blank=True, null=True)),
                    ],
                    options={
                        'db_table': 'ground_elevation_method_code',
                        'ordering': ['display_order', 'description'],
                    },
                ),
                migrations.CreateModel(
                    name='IntendedWaterUseCode',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('intended_water_use_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                        ('description', models.CharField(max_length=100)),
                        ('display_order', models.PositiveIntegerField()),
                        ('effective_date', models.DateTimeField(blank=True, null=True)),
                        ('expiry_date', models.DateTimeField(blank=True, null=True)),
                    ],
                    options={
                        'db_table': 'intended_water_use_code',
                        'ordering': ['display_order', 'description'],
                    },
                ),
                migrations.CreateModel(
                    name='LandDistrictCode',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('land_district_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                        ('name', models.CharField(max_length=255)),
                        ('display_order', models.PositiveIntegerField()),
                        ('effective_date', models.DateTimeField(blank=True, null=True)),
                        ('expiry_date', models.DateTimeField(blank=True, null=True)),
                    ],
                    options={
                        'db_table': 'land_district_code',
                        'ordering': ['display_order', 'name'],
                    },
                ),
                migrations.CreateModel(
                    name='LicencedStatusCode',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('licenced_status_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                        ('description', models.CharField(max_length=255)),
                        ('display_order', models.PositiveIntegerField()),
                        ('effective_date', models.DateTimeField(blank=True, null=True)),
                        ('expiry_date', models.DateTimeField(blank=True, null=True)),
                    ],
                    options={
                        'db_table': 'licenced_status_code',
                        'ordering': ['display_order', 'licenced_status_code'],
                    },
                ),
                migrations.CreateModel(
                    name='LinerMaterialCode',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('liner_material_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                        ('description', models.CharField(max_length=100)),
                        ('display_order', models.PositiveIntegerField()),
                        ('effective_date', models.DateTimeField(blank=True, null=True)),
                        ('expiry_date', models.DateTimeField(blank=True, null=True)),
                    ],
                    options={
                        'db_table': 'liner_material_code',
                        'ordering': ['display_order', 'description'],
                    },
                ),
                migrations.CreateModel(
                    name='LinerPerforation',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('liner_perforation_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                        ('liner_perforation_from', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Perforated From')),
                        ('liner_perforation_to', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Perforated To')),
                        ('activity_submission', models.ForeignKey(blank=True, db_column='filing_number', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.ActivitySubmission')),
                    ],
                    options={
                        'db_table': 'liner_perforation',
                    },
                ),
                migrations.CreateModel(
                    name='LtsaOwner',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('lsts_owner_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                        ('full_name', models.CharField(max_length=200, verbose_name='Owner Name')),
                        ('mailing_address', models.CharField(max_length=100, verbose_name='Mailing Address')),
                        ('city', models.CharField(max_length=100, verbose_name='Town/City')),
                        ('postal_code', models.CharField(blank=True, max_length=10, verbose_name='Postal Code')),
                        ('province_state', models.ForeignKey(db_column='province_state_code', on_delete=django.db.models.deletion.CASCADE, to='gwells.ProvinceStateCode', verbose_name='Province')),
                    ],
                    options={
                        'db_table': 'ltsa_owner',
                    },
                ),
                migrations.CreateModel(
                    name='ObsWellStatusCode',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('obs_well_status_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                        ('description', models.CharField(max_length=255)),
                        ('display_order', models.PositiveIntegerField()),
                        ('effective_date', models.DateTimeField(blank=True, null=True)),
                        ('expiry_date', models.DateTimeField(blank=True, null=True)),
                    ],
                    options={
                        'db_table': 'obs_well_status_code',
                        'ordering': ['display_order', 'obs_well_status_code'],
                    },
                ),
                migrations.CreateModel(
                    name='Perforation',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('perforation_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                        ('liner_thickness', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, verbose_name='Liner Thickness')),
                        ('liner_diameter', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Liner Diameter')),
                        ('liner_from', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Liner From')),
                        ('liner_to', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Liner To')),
                        ('liner_perforation_from', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Perforation From')),
                        ('liner_perforation_to', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Perforation To')),
                    ],
                    options={
                        'db_table': 'perforation',
                        'ordering': ['liner_from', 'liner_to', 'liner_perforation_from', 'liner_perforation_to', 'perforation_guid'],
                    },
                ),
                migrations.CreateModel(
                    name='ProductionData',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('production_data_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                        ('yield_estimation_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Estimation Rate')),
                        ('yield_estimation_duration', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Estimation Duration')),
                        ('static_level', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='SWL Before Test')),
                        ('drawdown', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                        ('hydro_fracturing_performed', models.BooleanField(choices=[(False, 'No'), (True, 'Yes')], default=False, verbose_name='Hydro-fracturing Performed?')),
                        ('hydro_fracturing_yield_increase', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Well Yield Increase Due to Hydro-fracturing')),
                        ('activity_submission', models.ForeignKey(blank=True, db_column='filing_number', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.ActivitySubmission')),
                    ],
                    options={
                        'db_table': 'production_data',
                    },
                ),
                migrations.CreateModel(
                    name='Screen',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('screen_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                        ('screen_from', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='From')),
                        ('screen_to', models.DecimalField(decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='To')),
                        ('internal_diameter', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Diameter')),
                        ('slot_size', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Slot Size')),
                        ('activity_submission', models.ForeignKey(blank=True, db_column='filing_number', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.ActivitySubmission')),
                        ('assembly_type', models.ForeignKey(blank=True, db_column='screen_assembly_type_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.ScreenAssemblyTypeCode')),
                    ],
                    options={
                        'db_table': 'screen',
                        'ordering': ['screen_from', 'screen_to'],
                    },
                ),
                migrations.CreateModel(
                    name='SurfaceSealMaterialCode',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('surface_seal_material_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                        ('description', models.CharField(max_length=100)),
                        ('display_order', models.PositiveIntegerField()),
                        ('effective_date', models.DateTimeField(blank=True, null=True)),
                        ('expiry_date', models.DateTimeField(blank=True, null=True)),
                    ],
                    options={
                        'db_table': 'surface_seal_material_code',
                        'ordering': ['display_order', 'description'],
                    },
                ),
                migrations.CreateModel(
                    name='SurfaceSealMethodCode',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('surface_seal_method_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                        ('description', models.CharField(max_length=100)),
                        ('display_order', models.PositiveIntegerField()),
                        ('effective_date', models.DateTimeField(blank=True, null=True)),
                        ('expiry_date', models.DateTimeField(blank=True, null=True)),
                    ],
                    options={
                        'db_table': 'surface_seal_method_code',
                        'ordering': ['display_order', 'description'],
                    },
                ),
                migrations.CreateModel(
                    name='WaterQualityCharacteristic',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('water_quality_characteristic_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                        ('code', models.CharField(max_length=10, unique=True)),
                        ('description', models.CharField(max_length=100)),
                        ('display_order', models.PositiveIntegerField()),
                    ],
                    options={
                        'db_table': 'water_quality_characteristic',
                        'ordering': ['display_order', 'description'],
                    },
                ),
                migrations.CreateModel(
                    name='Well',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('well_guid', models.UUIDField(default=uuid.uuid4, editable=False)),
                        ('well_tag_number', models.AutoField(primary_key=True, serialize=False, verbose_name='Well Tag Number')),
                        ('identification_plate_number', models.PositiveIntegerField(blank=True, null=True, unique=True, verbose_name='Well Identification Plate Number')),
                        ('owner_full_name', models.CharField(max_length=200, verbose_name='Owner Name')),
                        ('owner_mailing_address', models.CharField(max_length=100, verbose_name='Mailing Address')),
                        ('owner_city', models.CharField(max_length=100, verbose_name='Town/City')),
                        ('owner_postal_code', models.CharField(blank=True, max_length=10, verbose_name='Postal Code')),
                        ('street_address', models.CharField(blank=True, max_length=100, verbose_name='Street Address')),
                        ('city', models.CharField(blank=True, max_length=50, verbose_name='Town/City')),
                        ('legal_lot', models.CharField(blank=True, max_length=10, verbose_name='Lot')),
                        ('legal_plan', models.CharField(blank=True, max_length=20, verbose_name='Plan')),
                        ('legal_district_lot', models.CharField(blank=True, max_length=20, verbose_name='District Lot')),
                        ('legal_block', models.CharField(blank=True, max_length=10, verbose_name='Block')),
                        ('legal_section', models.CharField(blank=True, max_length=10, verbose_name='Section')),
                        ('legal_township', models.CharField(blank=True, max_length=20, verbose_name='Township')),
                        ('legal_range', models.CharField(blank=True, max_length=10, verbose_name='Range')),
                        ('legal_pid', models.CharField(blank=True, max_length=9, null=True, verbose_name='Property Identification Description (PID)')),
                        ('well_location_description', models.CharField(blank=True, max_length=500, verbose_name='Description of Well Location')),
                        ('construction_start_date', models.DateTimeField(null=True, verbose_name='Construction Start Date')),
                        ('construction_end_date', models.DateTimeField(null=True, verbose_name='Construction Date')),
                        ('alteration_start_date', models.DateTimeField(null=True, verbose_name='Alteration Start Date')),
                        ('alteration_end_date', models.DateTimeField(null=True, verbose_name='Alteration Date')),
                        ('decommission_start_date', models.DateTimeField(null=True, verbose_name='Decommission Start Date')),
                        ('decommission_end_date', models.DateTimeField(null=True, verbose_name='Decommission Date')),
                        ('well_identification_plate_attached', models.CharField(blank=True, max_length=500, null=True, verbose_name='Well Identification Plate Is Attached')),
                        ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=8, null=True, verbose_name='Latitude')),
                        ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude')),
                        ('ground_elevation', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Ground Elevation')),
                        ('other_drilling_method', models.CharField(blank=True, max_length=50, null=True, verbose_name='Specify Other Drilling Method')),
                        ('well_orientation', models.BooleanField(choices=[(True, 'vertical'), (False, 'horizontal')], default=True, verbose_name='Orientation of Well')),
                        ('surface_seal_length', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Surface Seal Length')),
                        ('surface_seal_thickness', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Surface Seal Thickness')),
                        ('backfill_type', models.CharField(blank=True, max_length=250, null=True, verbose_name='Backfill Material Above Surface Seal')),
                        ('backfill_depth', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Backfill Depth')),
                        ('liner_diameter', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Liner Diameter')),
                        ('liner_thickness', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Liner Thickness')),
                        ('liner_from', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Liner From')),
                        ('liner_to', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Liner To')),
                        ('other_screen_material', models.CharField(blank=True, max_length=50, verbose_name='Specify Other Screen Material')),
                        ('other_screen_bottom', models.CharField(blank=True, max_length=50, verbose_name='Specify Other Screen Bottom')),
                        ('filter_pack_from', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Filter Pack From')),
                        ('filter_pack_to', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Filter Pack To')),
                        ('filter_pack_thickness', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Filter Pack Thickness')),
                        ('development_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Development Total Duration')),
                        ('development_notes', models.CharField(blank=True, max_length=255, verbose_name='Development Notes')),
                        ('water_quality_colour', models.CharField(blank=True, max_length=60, verbose_name='Water Quality Colour')),
                        ('water_quality_odour', models.CharField(blank=True, max_length=60, verbose_name='Water Quality Odour')),
                        ('total_depth_drilled', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Total Depth Drilled')),
                        ('finished_well_depth', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Finished Well Depth')),
                        ('final_casing_stick_up', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True, verbose_name='Final Casing Stick Up')),
                        ('bedrock_depth', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Depth to Bedrock')),
                        ('water_supply_system_name', models.CharField(blank=True, max_length=80, null=True, verbose_name='Water Supply System Name')),
                        ('water_supply_system_well_name', models.CharField(blank=True, max_length=80, null=True, verbose_name='Water Supply System Well Name')),
                        ('static_water_level', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Static Water Level (BTOC)')),
                        ('well_yield', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='Estimated Well Yield')),
                        ('artesian_flow', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Artesian Flow')),
                        ('artesian_pressure', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Artesian Pressure')),
                        ('well_cap_type', models.CharField(blank=True, max_length=40, null=True, verbose_name='Well Cap')),
                        ('well_disinfected', models.BooleanField(choices=[(False, 'No'), (True, 'Yes')], default=False, verbose_name='Well Disinfected')),
                        ('comments', models.CharField(blank=True, max_length=3000, null=True)),
                        ('alternative_specs_submitted', models.BooleanField(choices=[(False, 'No'), (True, 'Yes')], default=False, verbose_name='Alternative specs submitted (if required)')),
                        ('diameter', models.CharField(blank=True, max_length=9)),
                        ('observation_well_number', models.CharField(blank=True, max_length=3, null=True, verbose_name='Observation Well Number')),
                        ('ems', models.CharField(blank=True, max_length=10, null=True, verbose_name='Environmental Monitoring System (EMS) ID')),
                        ('utm_zone_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Zone')),
                        ('utm_northing', models.IntegerField(blank=True, null=True, verbose_name='UTM Northing')),
                        ('utm_easting', models.IntegerField(blank=True, null=True, verbose_name='UTM Easting')),
                        ('utm_accuracy_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Location Accuracy Code')),
                        ('decommission_reason', models.CharField(blank=True, max_length=250, null=True, verbose_name='Reason for Decommission')),
                        ('sealant_material', models.CharField(blank=True, max_length=100, null=True, verbose_name='Sealant Material')),
                        ('backfill_material', models.CharField(blank=True, max_length=100, null=True, verbose_name='Backfill Material')),
                        ('decommission_details', models.CharField(blank=True, max_length=250, null=True, verbose_name='Decommission Details')),
                        ('bcgs_id', models.ForeignKey(blank=True, db_column='bcgs_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.BCGS_Numbers', verbose_name='BCGS Mapsheet Number')),
                        ('decommission_method', models.ForeignKey(blank=True, db_column='decommission_method_code', null='True', on_delete=django.db.models.deletion.CASCADE, to='wells.DecommissionMethodCode', verbose_name='Method of Decommission')),
                        ('development_method', models.ForeignKey(blank=True, db_column='development_method_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.DevelopmentMethodCode', verbose_name='Developed By')),
                        ('drilling_company', models.ForeignKey(blank=True, db_column='drilling_company_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.DrillingCompany', verbose_name='Drilling Company')),
                        ('drilling_method', models.ForeignKey(blank=True, db_column='drilling_method_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.DrillingMethodCode', verbose_name='Drilling Method')),
                        ('filter_pack_material', models.ForeignKey(blank=True, db_column='filter_pack_material_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.FilterPackMaterialCode', verbose_name='Filter Pack Material')),
                        ('filter_pack_material_size', models.ForeignKey(blank=True, db_column='filter_pack_material_size_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.FilterPackMaterialSizeCode', verbose_name='Filter Pack Material Size')),
                        ('ground_elevation_method', models.ForeignKey(blank=True, db_column='ground_elevation_method_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.GroundElevationMethodCode', verbose_name='Elevation Determined By')),
                        ('intended_water_use', models.ForeignKey(blank=True, db_column='intended_water_use_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.IntendedWaterUseCode', verbose_name='Intended Water Use')),
                        ('land_district', models.ForeignKey(blank=True, db_column='land_district_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.LandDistrictCode', verbose_name='Land District')),
                        ('licenced_status', models.ForeignKey(blank=True, db_column='licenced_status_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.LicencedStatusCode', verbose_name='Licenced Status')),
                        ('liner_material', models.ForeignKey(blank=True, db_column='liner_material_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.LinerMaterialCode', verbose_name='Liner Material')),
                        ('observation_well_status', models.ForeignKey(blank=True, db_column='obs_well_status_code', null='True', on_delete=django.db.models.deletion.CASCADE, to='wells.ObsWellStatusCode', verbose_name='Observation Well Status')),
                        ('owner_province_state', models.ForeignKey(blank=True, db_column='province_state_code', on_delete=django.db.models.deletion.CASCADE, to='gwells.ProvinceStateCode', verbose_name='Province')),
                        ('screen_bottom', models.ForeignKey(blank=True, db_column='screen_bottom_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.ScreenBottomCode', verbose_name='Bottom')),
                        ('screen_intake_method', models.ForeignKey(blank=True, db_column='screen_intake_method_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.ScreenIntakeMethodCode', verbose_name='Intake Method')),
                        ('screen_material', models.ForeignKey(blank=True, db_column='screen_material_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.ScreenMaterialCode', verbose_name='Material')),
                        ('screen_opening', models.ForeignKey(blank=True, db_column='screen_opening_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.ScreenOpeningCode', verbose_name='Opening')),
                        ('screen_type', models.ForeignKey(blank=True, db_column='screen_type_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.ScreenTypeCode', verbose_name='Type')),
                        ('surface_seal_material', models.ForeignKey(blank=True, db_column='surface_seal_material_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.SurfaceSealMaterialCode', verbose_name='Surface Seal Material')),
                        ('surface_seal_method', models.ForeignKey(blank=True, db_column='surface_seal_method_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.SurfaceSealMethodCode', verbose_name='Surface Seal Installation Method')),
                        ('water_quality_characteristics', models.ManyToManyField(blank=True, db_table='well_water_quality', to='wells.WaterQualityCharacteristic', verbose_name='Obvious Water Quality Characteristics')),
                    ],
                    options={
                        'db_table': 'well',
                    },
                ),
                migrations.CreateModel(
                    name='WellClassCode',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('well_class_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                        ('description', models.CharField(max_length=100)),
                        ('display_order', models.PositiveIntegerField()),
                        ('effective_date', models.DateTimeField(blank=True, null=True)),
                        ('expiry_date', models.DateTimeField(blank=True, null=True)),
                    ],
                    options={
                        'db_table': 'well_class_code',
                        'ordering': ['display_order', 'description'],
                    },
                ),
                migrations.CreateModel(
                    name='WellStatusCode',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('well_status_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                        ('description', models.CharField(max_length=255)),
                        ('display_order', models.PositiveIntegerField()),
                        ('effective_date', models.DateTimeField(blank=True, null=True)),
                        ('expiry_date', models.DateTimeField(blank=True, null=True)),
                    ],
                    options={
                        'db_table': 'well_status_code',
                        'ordering': ['display_order', 'well_status_code'],
                    },
                ),
                migrations.CreateModel(
                    name='WellSubclassCode',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('well_subclass_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                        ('well_subclass_code', models.CharField(max_length=10)),
                        ('description', models.CharField(max_length=100)),
                        ('display_order', models.PositiveIntegerField()),
                        ('effective_date', models.DateTimeField(blank=True, null=True)),
                        ('expiry_date', models.DateTimeField(blank=True, null=True)),
                        ('well_class', models.ForeignKey(blank=True, db_column='well_class_code', null=True, on_delete=django.db.models.deletion.PROTECT, to='wells.WellClassCode')),
                    ],
                    options={
                        'db_table': 'well_subclass_code',
                        'ordering': ['display_order', 'description'],
                    },
                ),
                migrations.CreateModel(
                    name='WellYieldUnitCode',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('well_yield_unit_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                        ('description', models.CharField(max_length=100)),
                        ('display_order', models.PositiveIntegerField()),
                        ('effective_date', models.DateTimeField(blank=True, null=True)),
                        ('expiry_date', models.DateTimeField(blank=True, null=True)),
                    ],
                    options={
                        'db_table': 'well_yield_unit_code',
                        'ordering': ['display_order', 'description'],
                    },
                ),
                migrations.CreateModel(
                    name='YieldEstimationMethodCode',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('yield_estimation_method_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                        ('description', models.CharField(max_length=100)),
                        ('display_order', models.PositiveIntegerField()),
                        ('effective_date', models.DateTimeField(blank=True, null=True)),
                        ('expiry_date', models.DateTimeField(blank=True, null=True)),
                    ],
                    options={
                        'db_table': 'yield_estimation_method_code',
                        'ordering': ['display_order', 'description'],
                    },
                ),
                migrations.AddField(
                    model_name='well',
                    name='well_class',
                    field=models.ForeignKey(db_column='well_class_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.WellClassCode', verbose_name='Well Class'),
                ),
                migrations.AddField(
                    model_name='well',
                    name='well_status',
                    field=models.ForeignKey(blank=True, db_column='well_status_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.WellStatusCode', verbose_name='Well Status'),
                ),
                migrations.AddField(
                    model_name='well',
                    name='well_subclass',
                    field=models.ForeignKey(blank=True, db_column='well_subclass_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.WellSubclassCode', verbose_name='Well Subclass'),
                ),
                migrations.AddField(
                    model_name='well',
                    name='well_yield_unit',
                    field=models.ForeignKey(blank=True, db_column='well_yield_unit_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.WellYieldUnitCode'),
                ),
                migrations.AddField(
                    model_name='screen',
                    name='well',
                    field=models.ForeignKey(blank=True, db_column='well_tag_number', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.Well'),
                ),
                migrations.AddField(
                    model_name='productiondata',
                    name='well',
                    field=models.ForeignKey(blank=True, db_column='well_tag_number', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.Well'),
                ),
                migrations.AddField(
                    model_name='productiondata',
                    name='well_yield_unit',
                    field=models.ForeignKey(blank=True, db_column='well_yield_unit_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.WellYieldUnitCode'),
                ),
                migrations.AddField(
                    model_name='productiondata',
                    name='yield_estimation_method',
                    field=models.ForeignKey(blank=True, db_column='yield_estimation_method_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.YieldEstimationMethodCode', verbose_name='Estimation Method'),
                ),
                migrations.AddField(
                    model_name='perforation',
                    name='well_tag_number',
                    field=models.ForeignKey(blank=True, db_column='well_tag_number', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.Well'),
                ),
                migrations.AddField(
                    model_name='ltsaowner',
                    name='well',
                    field=models.ForeignKey(blank=True, db_column='well_tag_number', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.Well'),
                ),
                migrations.AddField(
                    model_name='linerperforation',
                    name='well',
                    field=models.ForeignKey(blank=True, db_column='well_tag_number', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.Well'),
                ),
                migrations.AddField(
                    model_name='casing',
                    name='casing_code',
                    field=models.ForeignKey(db_column='casing_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.CasingCode', verbose_name='Casing Code'),
                ),
                migrations.AddField(
                    model_name='casing',
                    name='casing_material',
                    field=models.ForeignKey(blank=True, db_column='casing_material_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.CasingMaterialCode', verbose_name='Casing Material Code'),
                ),
                migrations.AddField(
                    model_name='casing',
                    name='well_tag_number',
                    field=models.ForeignKey(blank=True, db_column='well_tag_number', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.Well'),
                ),
                migrations.AddField(
                    model_name='aquiferwell',
                    name='well_tag_number',
                    field=models.ForeignKey(db_column='well_tag_number', on_delete=django.db.models.deletion.CASCADE, to='wells.Well'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='development_method',
                    field=models.ForeignKey(blank=True, db_column='development_method_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.DevelopmentMethodCode', verbose_name='Development Method'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='driller_responsible',
                    field=models.ForeignKey(db_column='driller_responsible_guid', on_delete=django.db.models.deletion.PROTECT, to='registries.Person', verbose_name='Person Responsible for Drilling'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='drilling_method',
                    field=models.ForeignKey(blank=True, db_column='drilling_method_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.DrillingMethodCode', verbose_name='Drilling Method'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='filter_pack_material',
                    field=models.ForeignKey(blank=True, db_column='filter_pack_material_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.FilterPackMaterialCode', verbose_name='Filter Pack Material'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='filter_pack_material_size',
                    field=models.ForeignKey(blank=True, db_column='filter_pack_material_size_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.FilterPackMaterialSizeCode', verbose_name='Filter Pack Material Size'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='ground_elevation_method',
                    field=models.ForeignKey(blank=True, db_column='ground_elevation_method_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.GroundElevationMethodCode', verbose_name='Elevation Determined By'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='intended_water_use',
                    field=models.ForeignKey(blank=True, db_column='intended_water_use_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.IntendedWaterUseCode', verbose_name='Intended Water Use'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='land_district',
                    field=models.ForeignKey(blank=True, db_column='land_district_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.LandDistrictCode', verbose_name='Land District'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='liner_material',
                    field=models.ForeignKey(blank=True, db_column='liner_material_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.LinerMaterialCode', verbose_name='Liner Material'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='owner_province_state',
                    field=models.ForeignKey(db_column='province_state_code', on_delete=django.db.models.deletion.CASCADE, to='gwells.ProvinceStateCode', verbose_name='Province'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='screen_bottom',
                    field=models.ForeignKey(blank=True, db_column='screen_bottom_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.ScreenBottomCode', verbose_name='Bottom'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='screen_intake_method',
                    field=models.ForeignKey(blank=True, db_column='screen_intake_method_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.ScreenIntakeMethodCode', verbose_name='Intake'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='screen_material',
                    field=models.ForeignKey(blank=True, db_column='screen_material_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.ScreenMaterialCode', verbose_name='Material'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='screen_opening',
                    field=models.ForeignKey(blank=True, db_column='screen_opening_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.ScreenOpeningCode', verbose_name='Opening'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='screen_type',
                    field=models.ForeignKey(blank=True, db_column='screen_type_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.ScreenTypeCode', verbose_name='Type'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='surface_seal_material',
                    field=models.ForeignKey(blank=True, db_column='surface_seal_material_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.SurfaceSealMaterialCode', verbose_name='Surface Seal Material'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='surface_seal_method',
                    field=models.ForeignKey(blank=True, db_column='surface_seal_method_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.SurfaceSealMethodCode', verbose_name='Surface Seal Installation Method'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='water_quality_characteristics',
                    field=models.ManyToManyField(blank=True, db_table='activity_submission_water_quality', to='wells.WaterQualityCharacteristic', verbose_name='Obvious Water Quality Characteristics'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='well_activity_type',
                    field=models.IntegerField(db_column='well_activity_code', verbose_name='Type of Work', null=True),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='well_class',
                    field=models.ForeignKey(db_column='well_class_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.WellClassCode', verbose_name='Well Class'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='well_subclass',
                    field=models.ForeignKey(blank=True, db_column='well_subclass_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.WellSubclassCode', verbose_name='Well Subclass'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='well_tag_number',
                    field=models.ForeignKey(blank=True, db_column='well_tag_number', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.Well'),
                ),
                migrations.AddField(
                    model_name='activitysubmission',
                    name='well_yield_unit',
                    field=models.ForeignKey(blank=True, db_column='well_yield_unit_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.WellYieldUnitCode'),
                ),
            ],
        ),
        migrations.AlterModelOptions(
            name='bcgs_numbers',
            options={},
        ),
        migrations.AlterField(
            model_name='bcgs_numbers',
            name='bcgs_id',
            field=models.BigIntegerField(editable=False, primary_key=True, serialize=False),
        ),
        migrations.RenameField(
            model_name='activitysubmission',
            old_name='well_tag_number',
            new_name='well',
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='driller_responsible',
            field=models.ForeignKey(blank=True, db_column='driller_responsible_guid', null=True, on_delete=django.db.models.deletion.PROTECT, to='registries.Person', verbose_name='Person Responsible for Drilling'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='work_end_date',
            field=models.DateField(blank=True, null=True, verbose_name='Work End Date'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='work_start_date',
            field=models.DateField(blank=True, null=True, verbose_name='Work Start Date'),
        ),
        migrations.AlterField(
            model_name='well',
            name='owner_province_state',
            field=models.ForeignKey(blank=True, db_column='province_state_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.ProvinceStateCode', verbose_name='Province'),
        ),
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='LithologyDescription',
                    fields=[
                        ('create_user', models.CharField(max_length=60)),
                        ('create_date', models.DateTimeField(blank=True, null=True)),
                        ('update_user', models.CharField(max_length=60, null=True)),
                        ('update_date', models.DateTimeField(blank=True, null=True)),
                        ('lithology_description_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                        ('lithology_from', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='From')),
                        ('lithology_to', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='To')),
                        ('lithology_raw_data', models.CharField(blank=True, max_length=250, null=True, verbose_name='Raw Data')),
                        ('water_bearing_estimated_flow', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Water Bearing Estimated Flow')),
                        ('lithology_observation', models.CharField(blank=True, max_length=250, null=True, verbose_name='Observations')),
                        ('lithology_sequence_number', models.BigIntegerField(blank=True, null=True)),
                    ],
                    options={
                        'db_table': 'lithology_description',
                        'ordering': ['lithology_sequence_number'],
                    },
                ),
                migrations.AlterField(
                    model_name='activitysubmission',
                    name='well_activity_type',
                    field=models.ForeignKey(db_column='well_activity_code', on_delete=django.db.models.deletion.CASCADE, to='submissions.WellActivityCode', verbose_name='Type of Work'),
                ),
                migrations.AddField(
                    model_name='lithologydescription',
                    name='activity_submission',
                    field=models.ForeignKey(blank=True, db_column='filing_number', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.ActivitySubmission'),
                ),
                migrations.AddField(
                    model_name='lithologydescription',
                    name='bedrock_material',
                    field=models.ForeignKey(blank=True, db_column='bedrock_material_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.BedrockMaterialCode', verbose_name='Bedrock Material'),
                ),
                migrations.AddField(
                    model_name='lithologydescription',
                    name='bedrock_material_descriptor',
                    field=models.ForeignKey(blank=True, db_column='bedrock_material_descriptor_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.BedrockMaterialDescriptorCode', verbose_name='Descriptor'),
                ),
                migrations.AddField(
                    model_name='lithologydescription',
                    name='lithology_colour',
                    field=models.ForeignKey(blank=True, db_column='lithology_colour_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.LithologyColourCode', verbose_name='Colour'),
                ),
                migrations.AddField(
                    model_name='lithologydescription',
                    name='lithology_description',
                    field=models.ForeignKey(blank=True, db_column='lithology_description_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.LithologyDescriptionCode', verbose_name='Description'),
                ),
                migrations.AddField(
                    model_name='lithologydescription',
                    name='lithology_hardness',
                    field=models.ForeignKey(blank=True, db_column='lithology_hardness_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.LithologyHardnessCode', verbose_name='Hardness'),
                ),
                migrations.AddField(
                    model_name='lithologydescription',
                    name='lithology_material',
                    field=models.ForeignKey(blank=True, db_column='lithology_material_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.LithologyMaterialCode', verbose_name='Material'),
                ),
                migrations.AddField(
                    model_name='lithologydescription',
                    name='lithology_moisture',
                    field=models.ForeignKey(blank=True, db_column='lithology_moisture_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.LithologyMoistureCode', verbose_name='Moisture'),
                ),
                migrations.AddField(
                    model_name='lithologydescription',
                    name='lithology_structure',
                    field=models.ForeignKey(blank=True, db_column='lithology_structure_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.LithologyStructureCode', verbose_name='Bedding'),
                ),
                migrations.AddField(
                    model_name='lithologydescription',
                    name='secondary_surficial_material',
                    field=models.ForeignKey(blank=True, db_column='secondary_surficial_material_code', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='secondary_surficial_material_set', to='gwells.SurficialMaterialCode', verbose_name='Secondary Surficial Material'),
                ),
                migrations.AddField(
                    model_name='lithologydescription',
                    name='surficial_material',
                    field=models.ForeignKey(blank=True, db_column='surficial_material_code', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='surficial_material_set', to='gwells.SurficialMaterialCode', verbose_name='Surficial Material'),
                ),
                migrations.AddField(
                    model_name='lithologydescription',
                    name='water_bearing_estimated_flow_units',
                    field=models.ForeignKey(blank=True, db_column='well_yield_unit_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.WellYieldUnitCode', verbose_name='Units'),
                ),
                migrations.AddField(
                    model_name='lithologydescription',
                    name='well_tag_number',
                    field=models.ForeignKey(blank=True, db_column='well_tag_number', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.Well'),
                ),
            ],
        ),
        migrations.RenameField(
            model_name='casingmaterialcode',
            old_name='casing_material_code',
            new_name='code',
        ),
        migrations.RenameField(
            model_name='casingcode',
            old_name='casing_code',
            new_name='code',
        ),
        migrations.AlterField(
            model_name='casing',
            name='activity_submission',
            field=models.ForeignKey(blank=True, db_column='filing_number', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='casings', to='wells.ActivitySubmission'),
        ),
        migrations.AlterField(
            model_name='casingcode',
            name='code',
            field=models.CharField(db_column='casing_code', editable=False, max_length=10, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='casingmaterialcode',
            name='code',
            field=models.CharField(db_column='casing_material_code', editable=False, max_length=10, primary_key=True, serialize=False),
        ),
        migrations.RenameField(
            model_name='casing',
            old_name='well_tag_number',
            new_name='well',
        ),
        migrations.AlterField(
            model_name='casing',
            name='well',
            field=models.ForeignKey(blank=True, db_column='well_tag_number', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='casing_set', to='wells.Well'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='owner_city',
            field=models.CharField(blank=True, max_length=100, verbose_name='Town/City'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='owner_mailing_address',
            field=models.CharField(blank=True, max_length=100, verbose_name='Mailing Address'),
        ),
        migrations.AlterField(
            model_name='casing',
            name='activity_submission',
            field=models.ForeignKey(blank=True, db_column='filing_number', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='casing_set', to='wells.ActivitySubmission'),
        ),
        migrations.AlterField(
            model_name='casing',
            name='casing_code',
            field=models.ForeignKey(db_column='casing_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.CasingCode', verbose_name='Casing Type Code'),
        ),
        migrations.AlterField(
            model_name='well',
            name='alteration_end_date',
            field=models.DateField(null=True, verbose_name='Alteration Date'),
        ),
        migrations.AlterField(
            model_name='well',
            name='alteration_start_date',
            field=models.DateField(null=True, verbose_name='Alteration Start Date'),
        ),
        migrations.AlterField(
            model_name='well',
            name='construction_end_date',
            field=models.DateField(null=True, verbose_name='Construction Date'),
        ),
        migrations.AlterField(
            model_name='well',
            name='construction_start_date',
            field=models.DateField(null=True, verbose_name='Construction Start Date'),
        ),
        migrations.AlterField(
            model_name='well',
            name='decommission_end_date',
            field=models.DateField(null=True, verbose_name='Decommission Date'),
        ),
        migrations.AlterField(
            model_name='well',
            name='decommission_start_date',
            field=models.DateField(null=True, verbose_name='Decommission Start Date'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='owner_province_state',
            field=models.ForeignKey(db_column='province_state_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.ProvinceStateCode', verbose_name='Province'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='owner_full_name',
            field=models.CharField(max_length=200, null=True, verbose_name='Owner Name'),
        ),
        migrations.CreateModel(
            name='WaterQualityColour',
            fields=[
                ('create_user', models.CharField(max_length=60)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=60, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('code', models.CharField(db_column='water_quality_colour_code', max_length=32, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
                ('display_order', models.PositiveIntegerField()),
                ('effective_date', models.DateTimeField(blank=True, null=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'water_quality_colour_code',
            },
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='ems_id',
            field=models.CharField(blank=True, max_length=30),
        ),
        migrations.AddField(
            model_name='well',
            name='ems_id',
            field=models.CharField(blank=True, max_length=30),
        ),
        migrations.RemoveField(
            model_name='activitysubmission',
            name='water_quality_characteristics',
        ),
        migrations.RemoveField(
            model_name='waterqualitycharacteristic',
            name='water_quality_characteristic_guid',
        ),
        migrations.RemoveField(
            model_name='well',
            name='water_quality_characteristics',
        ),
        migrations.AlterField(
            model_name='waterqualitycharacteristic',
            name='code',
            field=models.CharField(db_column='water_quality_characteristic_code', max_length=10, primary_key=True, serialize=False),
        ),
        migrations.RunPython(
            code=wells.data_migrations.load_casing_codes_fixture,
            reverse_code=wells.data_migrations.unload_casing_codes_fixture,
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='water_quality_characteristics',
            field=models.ManyToManyField(blank=True, db_table='activity_submission_water_quality', to='wells.WaterQualityCharacteristic', verbose_name='Obvious Water Quality Characteristics'),
        ),
        migrations.AddField(
            model_name='well',
            name='water_quality_characteristics',
            field=models.ManyToManyField(blank=True, db_table='well_water_quality', to='wells.WaterQualityCharacteristic', verbose_name='Obvious Water Quality Characteristics'),
        ),
        migrations.RunPython(
            code=wells.data_migrations.load_water_quality_codes,
            reverse_code=wells.data_migrations.unload_water_quality_codes,
        ),
        migrations.RenameField(
            model_name='linermaterialcode',
            old_name='liner_material_code',
            new_name='code',
        ),
        migrations.AlterField(
            model_name='linermaterialcode',
            name='code',
            field=models.CharField(db_column='liner_material_code', editable=False, max_length=10, primary_key=True, serialize=False),
        ),
        migrations.RenameField(
            model_name='linerperforation',
            old_name='liner_perforation_from',
            new_name='start',
        ),
        migrations.RenameField(
            model_name='linerperforation',
            old_name='liner_perforation_to',
            new_name='end',
        ),
        migrations.RenameField(
            model_name='casing',
            old_name='casing_from',
            new_name='start',
        ),
        migrations.RenameField(
            model_name='casing',
            old_name='casing_to',
            new_name='end',
        ),
        migrations.RenameField(
            model_name='screen',
            old_name='screen_from',
            new_name='start',
        ),
        migrations.RenameField(
            model_name='screen',
            old_name='screen_to',
            new_name='end',
        ),
        migrations.AlterModelOptions(
            name='casing',
            options={'ordering': ['start', 'end']},
        ),
        migrations.AlterModelOptions(
            name='linerperforation',
            options={'ordering': ['start', 'end']},
        ),
        migrations.AlterModelOptions(
            name='screen',
            options={'ordering': ['start', 'end']},
        ),
        migrations.AlterField(
            model_name='casing',
            name='end',
            field=models.DecimalField(blank=True, db_column='casing_to', decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='To'),
        ),
        migrations.AlterField(
            model_name='casing',
            name='start',
            field=models.DecimalField(blank=True, db_column='casing_from', decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='From'),
        ),
        migrations.AlterField(
            model_name='linerperforation',
            name='activity_submission',
            field=models.ForeignKey(blank=True, db_column='filing_number', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='linerperforation_set', to='wells.ActivitySubmission'),
        ),
        migrations.AlterField(
            model_name='linerperforation',
            name='end',
            field=models.DecimalField(db_column='liner_perforation_to', decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Perforated To'),
        ),
        migrations.AlterField(
            model_name='linerperforation',
            name='start',
            field=models.DecimalField(db_column='liner_perforation_from', decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Perforated From'),
        ),
        migrations.AlterField(
            model_name='linerperforation',
            name='well',
            field=models.ForeignKey(blank=True, db_column='well_tag_number', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='linerperforation_set', to='wells.Well'),
        ),
        migrations.AlterField(
            model_name='screen',
            name='activity_submission',
            field=models.ForeignKey(blank=True, db_column='filing_number', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='screen_set', to='wells.ActivitySubmission'),
        ),
        migrations.AlterField(
            model_name='screen',
            name='end',
            field=models.DecimalField(db_column='screen_to', decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='To'),
        ),
        migrations.AlterField(
            model_name='screen',
            name='start',
            field=models.DecimalField(blank=True, db_column='screen_from', decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='From'),
        ),
        migrations.AlterField(
            model_name='screen',
            name='well',
            field=models.ForeignKey(blank=True, db_column='well_tag_number', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='screen_set', to='wells.Well'),
        ),
        migrations.CreateModel(
            name='HydraulicProperty',
            fields=[
                ('create_user', models.CharField(max_length=60)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=60, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('hydraulic_property_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('storativity', models.DecimalField(blank=True, decimal_places=7, max_digits=8, null=True, verbose_name='Storativity')),
                ('transmissivity', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True, verbose_name='Transmissivity')),
                ('hydraulic_conductivity', models.TextField(blank=True, max_length=100, null=True, verbose_name='Hydraulic Conductivity')),
                ('specific_storage', models.TextField(blank=True, max_length=100, null=True, verbose_name='Specific Storage')),
                ('specific_yield', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Specific Yield')),
                ('testing_method', models.TextField(blank=True, max_length=100, null=True, verbose_name='Testing Method')),
                ('testing_duration', models.PositiveIntegerField()),
                ('analytic_solution_type', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Analytic Solution Type')),
                ('boundary_effect', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Boundary Effect')),
                ('avi', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True, verbose_name='AVI')),
            ],
            options={
                'verbose_name_plural': 'Hydraulic Properties',
                'db_table': 'hydraulic_property',
            },
        ),
        migrations.AddField(
            model_name='well',
            name='aquifer',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='hydraulicproperty',
            name='well',
            field=models.ForeignKey(db_column='well_tag_number', on_delete=django.db.models.deletion.CASCADE, to='wells.Well'),
        ),
        migrations.AlterField(
            model_name='well',
            name='ems_id',
            field=models.CharField(blank=True, max_length=30, null=True),
        ),
        migrations.AlterField(
            model_name='hydraulicproperty',
            name='testing_duration',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='hydraulicproperty',
            name='avi',
            field=models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True, verbose_name='AVI'),
        ),
        migrations.RunPython(
            code=wells.data_migrations.change_code_description,
            reverse_code=wells.data_migrations.restore_code_description,
        ),
        migrations.AlterField(
            model_name='well',
            name='legal_pid',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='Property Identification Description (PID)'),
        ),
        migrations.RenameField(
            model_name='lithologydescription',
            old_name='well_tag_number',
            new_name='well',
        ),
        migrations.AlterField(
            model_name='lithologydescription',
            name='activity_submission',
            field=models.ForeignKey(blank=True, db_column='filing_number', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lithologydescription_set', to='wells.ActivitySubmission'),
        ),
        migrations.AlterField(
            model_name='lithologydescription',
            name='well',
            field=models.ForeignKey(blank=True, db_column='well_tag_number', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lithologydescription_set', to='wells.Well'),
        ),
        migrations.CreateModel(
            name='DecommissionDescription',
            fields=[
                ('create_user', models.CharField(max_length=60)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=60, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('decommission_description_guid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('start', models.DecimalField(db_column='decommission_description_from', decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Decommissioned From')),
                ('end', models.DecimalField(db_column='decommission_description_to', decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Decommissioned To')),
                ('observations', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DecommissionMaterialCode',
            fields=[
                ('create_user', models.CharField(max_length=60)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=60, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('code', models.CharField(db_column='decommission_material_code', max_length=30, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
                ('effective_date', models.DateTimeField(blank=True, null=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='backfill_material',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Backfill Material'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='decommission_details',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Decommission Details'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='decommission_method',
            field=models.ForeignKey(blank=True, db_column='decommission_method_code', null='True', on_delete=django.db.models.deletion.CASCADE, to='wells.DecommissionMethodCode', verbose_name='Method of Decommission'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='decommission_reason',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Reason for Decommission'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='sealant_material',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Sealant Material'),
        ),
        migrations.AddField(
            model_name='decommissiondescription',
            name='material',
            field=models.ForeignKey(db_column='decommission_material_code', on_delete=django.db.models.deletion.PROTECT, to='wells.DecommissionMaterialCode'),
        ),
        migrations.AddField(
            model_name='decommissiondescription',
            name='activity_submission',
            field=models.ForeignKey(blank=True, db_column='filing_number', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='decommission_description_set', to='wells.ActivitySubmission'),
        ),
        migrations.AddField(
            model_name='decommissiondescription',
            name='well',
            field=models.ForeignKey(blank=True, db_column='well_tag_number', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='decommission_description_set', to='wells.Well'),
        ),
        migrations.RunPython(
            code=wells.data_migrations.load_decomission_material_codes,
            reverse_code=wells.data_migrations.unload_decomission_material_codes,
        ),
        migrations.AddField(
            model_name='well',
            name='consultant_company',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Consultant Company'),
        ),
        migrations.AddField(
            model_name='well',
            name='consultant_name',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Consultant Name'),
        ),
        migrations.AddField(
            model_name='well',
            name='driller_name',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Name of Person Who Did the Work'),
        ),
        migrations.AddField(
            model_name='well',
            name='driller_responsible',
            field=models.ForeignKey(blank=True, db_column='driller_responsible_guid', null=True, on_delete=django.db.models.deletion.PROTECT, to='registries.Person', verbose_name='Person Responsible for Drilling'),
        ),
        migrations.AddField(
            model_name='well',
            name='owner_email',
            field=models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email address'),
        ),
        migrations.AddField(
            model_name='well',
            name='owner_tel',
            field=models.CharField(blank=True, max_length=25, null=True, verbose_name='Telephone number'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='owner_email',
            field=models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email address'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='owner_tel',
            field=models.CharField(blank=True, max_length=25, null=True, verbose_name='Telephone number'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='backfill_above_surface_seal',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Backfill Material Above Surface Seal'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='city',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Town/City'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='comments',
            field=models.CharField(blank=True, max_length=3000, null=True),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='consultant_company',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Consultant Company'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='consultant_name',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Consultant Name'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='decommission_method',
            field=models.ForeignKey(blank=True, db_column='decommission_method_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.DecommissionMethodCode', verbose_name='Method of Decommission'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='development_notes',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Development Notes'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='diameter',
            field=models.CharField(blank=True, max_length=9, null=True),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='driller_name',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Name of Person Who Did the Work'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='ems_id',
            field=models.CharField(blank=True, max_length=30, null=True),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='legal_block',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Block'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='legal_district_lot',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='District Lot'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='legal_lot',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Lot'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='legal_plan',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='Plan'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='legal_range',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Range'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='legal_section',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Section'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='legal_township',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='Township'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='other_drilling_method',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Specify Other Drilling Method'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='other_screen_bottom',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Specify Other Screen Bottom'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='other_screen_material',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Specify Other Screen Material'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='owner_city',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Town/City'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='owner_full_name',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Owner Name'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='owner_mailing_address',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Mailing Address'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='owner_postal_code',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Postal Code'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='owner_province_state',
            field=models.ForeignKey(blank=True, db_column='province_state_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.ProvinceStateCode', verbose_name='Province'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='street_address',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Street Address'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='water_quality_colour',
            field=models.CharField(blank=True, max_length=60, null=True, verbose_name='Water Quality Colour'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='water_quality_odour',
            field=models.CharField(blank=True, max_length=60, null=True, verbose_name='Water Quality Odour'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='water_supply_system_name',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Water Supply System Name'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='water_supply_system_well_name',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Water Supply System Well Name'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='well_cap_type',
            field=models.CharField(blank=True, max_length=40, null=True, verbose_name='Well Cap Type'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='well_class',
            field=models.ForeignKey(blank=True, db_column='well_class_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.WellClassCode', verbose_name='Well Class'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='well_location_description',
            field=models.CharField(blank=True, max_length=500, null=True, verbose_name='Well Location Description'),
        ),
        migrations.RenameField(
            model_name='activitysubmission',
            old_name='well_plate_attached',
            new_name='well_identification_plate_attached',
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='well_identification_plate_attached',
            field=models.CharField(blank=True, max_length=500, null=True, verbose_name='Well Identification Plate Is Attached'),
        ),
        migrations.AlterField(
            model_name='well',
            name='city',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Town/City'),
        ),
        migrations.AlterField(
            model_name='well',
            name='development_notes',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Development Notes'),
        ),
        migrations.AlterField(
            model_name='well',
            name='legal_block',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Block'),
        ),
        migrations.AlterField(
            model_name='well',
            name='legal_district_lot',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='District Lot'),
        ),
        migrations.AlterField(
            model_name='well',
            name='legal_lot',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Lot'),
        ),
        migrations.AlterField(
            model_name='well',
            name='legal_plan',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='Plan'),
        ),
        migrations.AlterField(
            model_name='well',
            name='legal_range',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Range'),
        ),
        migrations.AlterField(
            model_name='well',
            name='legal_section',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Section'),
        ),
        migrations.AlterField(
            model_name='well',
            name='legal_township',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='Township'),
        ),
        migrations.AlterField(
            model_name='well',
            name='other_screen_bottom',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Specify Other Screen Bottom'),
        ),
        migrations.AlterField(
            model_name='well',
            name='other_screen_material',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Specify Other Screen Material'),
        ),
        migrations.AlterField(
            model_name='well',
            name='owner_postal_code',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Postal Code'),
        ),
        migrations.AlterField(
            model_name='well',
            name='street_address',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Street Address'),
        ),
        migrations.AlterField(
            model_name='well',
            name='water_quality_colour',
            field=models.CharField(blank=True, max_length=60, null=True, verbose_name='Water Quality Colour'),
        ),
        migrations.AlterField(
            model_name='well',
            name='water_quality_odour',
            field=models.CharField(blank=True, max_length=60, null=True, verbose_name='Water Quality Odour'),
        ),
        migrations.AlterField(
            model_name='well',
            name='well_location_description',
            field=models.CharField(blank=True, max_length=500, null=True, verbose_name='Description of Well Location'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='decommission_method',
            field=models.ForeignKey(blank=True, db_column='decommission_method_code', null=True, on_delete=django.db.models.deletion.PROTECT, to='wells.DecommissionMethodCode', verbose_name='Method of Decommission'),
        ),
        migrations.AlterField(
            model_name='productiondata',
            name='well_yield_unit',
            field=models.ForeignKey(blank=True, db_column='well_yield_unit_code', null=True, on_delete=django.db.models.deletion.PROTECT, to='wells.WellYieldUnitCode'),
        ),
        migrations.AlterField(
            model_name='well',
            name='aquifer',
            field=models.ForeignKey(blank=True, db_column='aquifer_id', null=True, on_delete=django.db.models.deletion.PROTECT, to='aquifers.Aquifer', verbose_name='Aquifer ID Number'),
        ),
        migrations.AlterField(
            model_name='well',
            name='bcgs_id',
            field=models.ForeignKey(blank=True, db_column='bcgs_id', null=True, on_delete=django.db.models.deletion.PROTECT, to='wells.BCGS_Numbers', verbose_name='BCGS Mapsheet Number'),
        ),
        migrations.AlterField(
            model_name='well',
            name='decommission_method',
            field=models.ForeignKey(blank=True, db_column='decommission_method_code', null='True', on_delete=django.db.models.deletion.PROTECT, to='wells.DecommissionMethodCode', verbose_name='Method of Decommission'),
        ),
        migrations.AlterField(
            model_name='well',
            name='observation_well_status',
            field=models.ForeignKey(blank=True, db_column='obs_well_status_code', null='True', on_delete=django.db.models.deletion.PROTECT, to='wells.ObsWellStatusCode', verbose_name='Observation Well Status'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='id_plate_attached_by',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Well identification plate attached by'),
        ),
        migrations.AddField(
            model_name='well',
            name='id_plate_attached_by',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Well identification plate attached by'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='well_status',
            field=models.ForeignKey(blank=True, db_column='well_status_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.WellStatusCode', verbose_name='Well Status'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='backfill_depth',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Backfill Depth'),
        ),
        migrations.AddField(
            model_name='well',
            name='surface_seal_depth',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Surface Seal Depth'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='backfill_type',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Backfill Material Above Surface Seal'),
        ),
        migrations.RunPython(
            code=wells.data_migrations.load_filter_pack_codes,
            reverse_code=wells.data_migrations.unload_filter_pack_codes,
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='screen_information',
            field=models.CharField(blank=True, max_length=300, null=True, verbose_name='Screen Information'),
        ),
        migrations.AddField(
            model_name='productiondata',
            name='recommended_pump_depth',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Recommended pump depth'),
        ),
        migrations.AddField(
            model_name='productiondata',
            name='recommended_pump_rate',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Recommended pump rate'),
        ),
        migrations.AddField(
            model_name='well',
            name='screen_information',
            field=models.CharField(blank=True, max_length=300, null=True, verbose_name='Screen Information'),
        ),
        migrations.CreateModel(
            name='CoordinateAcquisitionCode',
            fields=[
                ('create_user', models.CharField(max_length=60)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=60, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('code', models.CharField(db_column='coordinate_acquisition_code', editable=False, max_length=1, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=250)),
                ('effective_date', models.DateTimeField()),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'coordinate_acquisition_code',
                'ordering': ['code'],
            },
        ),
        migrations.RunPython(
            code=wells.data_migrations.load_coordinate_aquisition_data,
            reverse_code=wells.data_migrations.unload_coordinate_aquisition_data,
        ),
        migrations.RenameField(
            model_name='well',
            old_name='utm_accuracy_code',
            new_name='coordinate_acquisition_code',
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='coordinate_acquisition_code',
            field=models.ForeignKey(blank=True, db_column='coordinate_acquisition_code', null=True, on_delete=django.db.models.deletion.PROTECT, to='wells.CoordinateAcquisitionCode', verbose_name='Location Accuracy Code'),
        ),
        migrations.AlterField(
            model_name='well',
            name='coordinate_acquisition_code',
            field=models.ForeignKey(blank=True, db_column='coordinate_acquisition_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.CoordinateAcquisitionCode', verbose_name='Location Accuracy Code'),
        ),
        migrations.AlterField(
            model_name='well',
            name='coordinate_acquisition_code',
            field=models.ForeignKey(blank=True, db_column='coordinate_acquisition_code', null=True, on_delete=django.db.models.deletion.PROTECT, to='wells.CoordinateAcquisitionCode', verbose_name='Location Accuracy Code'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='internal_comments',
            field=models.CharField(blank=True, max_length=3000, null=True),
        ),
        migrations.AddField(
            model_name='well',
            name='internal_comments',
            field=models.CharField(blank=True, max_length=3000, null=True),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='aquifer',
            field=models.ForeignKey(blank=True, db_column='aquifer_id', null=True, on_delete=django.db.models.deletion.PROTECT, to='aquifers.Aquifer', verbose_name='Aquifer ID Number'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='analytic_solution_type',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Analytic Solution Type'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='aquifer_vulnerability_index',
            field=models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True, verbose_name='AVI'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='boundary_effect',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Boundary Effect'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='hydraulic_conductivity',
            field=models.TextField(blank=True, max_length=100, null=True, verbose_name='Hydraulic Conductivity'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='specific_storage',
            field=models.TextField(blank=True, max_length=100, null=True, verbose_name='Specific Storage'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='specific_yield',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Specific Yield'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='storativity',
            field=models.DecimalField(blank=True, decimal_places=7, max_digits=8, null=True, verbose_name='Storativity'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='testing_duration',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='testing_method',
            field=models.TextField(blank=True, max_length=100, null=True, verbose_name='Testing Method'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='transmissivity',
            field=models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True, verbose_name='Transmissivity'),
        ),
        migrations.AddField(
            model_name='well',
            name='analytic_solution_type',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Analytic Solution Type'),
        ),
        migrations.AddField(
            model_name='well',
            name='aquifer_vulnerability_index',
            field=models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True, verbose_name='AVI'),
        ),
        migrations.AddField(
            model_name='well',
            name='boundary_effect',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Boundary Effect'),
        ),
        migrations.AddField(
            model_name='well',
            name='hydraulic_conductivity',
            field=models.TextField(blank=True, max_length=100, null=True, verbose_name='Hydraulic Conductivity'),
        ),
        migrations.AddField(
            model_name='well',
            name='specific_storage',
            field=models.TextField(blank=True, max_length=100, null=True, verbose_name='Specific Storage'),
        ),
        migrations.AddField(
            model_name='well',
            name='specific_yield',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Specific Yield'),
        ),
        migrations.AddField(
            model_name='well',
            name='storativity',
            field=models.DecimalField(blank=True, decimal_places=7, max_digits=8, null=True, verbose_name='Storativity'),
        ),
        migrations.AddField(
            model_name='well',
            name='testing_duration',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='well',
            name='testing_method',
            field=models.TextField(blank=True, max_length=100, null=True, verbose_name='Testing Method'),
        ),
        migrations.AddField(
            model_name='well',
            name='transmissivity',
            field=models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True, verbose_name='Transmissivity'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='observation_well_number',
            field=models.CharField(blank=True, max_length=30, null=True, verbose_name='Observation Well Number'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='observation_well_status',
            field=models.ForeignKey(blank=True, db_column='obs_well_status_code', null=True, on_delete=django.db.models.deletion.PROTECT, to='wells.ObsWellStatusCode', verbose_name='Observation Well Status'),
        ),
        migrations.AlterField(
            model_name='well',
            name='observation_well_status',
            field=models.ForeignKey(blank=True, db_column='obs_well_status_code', null=True, on_delete=django.db.models.deletion.PROTECT, to='wells.ObsWellStatusCode', verbose_name='Observation Well Status'),
        ),
        migrations.AlterField(
            model_name='well',
            name='observation_well_number',
            field=models.CharField(blank=True, max_length=30, null=True, verbose_name='Observation Well Number'),
        ),
        migrations.RunPython(
            code=wells.data_migrations.load_lithology_moisture_codes,
            reverse_code=wells.data_migrations.unload_lithology_moisture_codes,
        ),
        migrations.RemoveField(
            model_name='productiondata',
            name='activity_submission',
        ),
        migrations.RemoveField(
            model_name='productiondata',
            name='well',
        ),
        migrations.RemoveField(
            model_name='productiondata',
            name='well_yield_unit',
        ),
        migrations.RemoveField(
            model_name='productiondata',
            name='yield_estimation_method',
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='drawdown',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='hydro_fracturing_performed',
            field=models.BooleanField(choices=[(False, 'No'), (True, 'Yes')], default=False, verbose_name='Hydro-fracturing Performed?'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='hydro_fracturing_yield_increase',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Well Yield Increase Due to Hydro-fracturing'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='recommended_pump_depth',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Recommended pump depth'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='recommended_pump_rate',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Recommended pump rate'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='static_level_before_test',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='SWL Before Test'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='yield_estimation_duration',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Estimation Duration'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='yield_estimation_method',
            field=models.ForeignKey(blank=True, db_column='yield_estimation_method_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.YieldEstimationMethodCode', verbose_name='Estimation Method'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='yield_estimation_rate',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Estimation Rate'),
        ),
        migrations.AddField(
            model_name='well',
            name='drawdown',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AddField(
            model_name='well',
            name='hydro_fracturing_performed',
            field=models.BooleanField(choices=[(False, 'No'), (True, 'Yes')], default=False, verbose_name='Hydro-fracturing Performed?'),
        ),
        migrations.AddField(
            model_name='well',
            name='hydro_fracturing_yield_increase',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Well Yield Increase Due to Hydro-fracturing'),
        ),
        migrations.AddField(
            model_name='well',
            name='recommended_pump_depth',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Recommended pump depth'),
        ),
        migrations.AddField(
            model_name='well',
            name='recommended_pump_rate',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Recommended pump rate'),
        ),
        migrations.AddField(
            model_name='well',
            name='static_level_before_test',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='SWL Before Test'),
        ),
        migrations.AddField(
            model_name='well',
            name='yield_estimation_duration',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Estimation Duration'),
        ),
        migrations.AddField(
            model_name='well',
            name='yield_estimation_method',
            field=models.ForeignKey(blank=True, db_column='yield_estimation_method_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.YieldEstimationMethodCode', verbose_name='Estimation Method'),
        ),
        migrations.AddField(
            model_name='well',
            name='yield_estimation_rate',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Estimation Rate'),
        ),
        migrations.DeleteModel(
            name='ProductionData',
        ),
        migrations.RenameField(
            model_name='activitysubmission',
            old_name='driller_responsible',
            new_name='person_responsible',
        ),
        migrations.RenameField(
            model_name='well',
            old_name='driller_responsible',
            new_name='person_responsible',
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='person_responsible',
            field=models.ForeignKey(blank=True, db_column='person_responsible_guid', null=True, on_delete=django.db.models.deletion.PROTECT, to='registries.Person', verbose_name='Person Responsible for Drilling'),
        ),
        migrations.AlterField(
            model_name='well',
            name='person_responsible',
            field=models.ForeignKey(blank=True, db_column='person_responsible_guid', null=True, on_delete=django.db.models.deletion.PROTECT, to='registries.Person', verbose_name='Person Responsible for Drilling'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='company_of_person_responsible',
            field=models.ForeignKey(blank=True, db_column='org_of_person_responsible_guid', null=True, on_delete=django.db.models.deletion.PROTECT, to='registries.Organization', verbose_name='Company of person responsible for drilling'),
        ),
        migrations.AddField(
            model_name='well',
            name='company_of_person_responsible',
            field=models.ForeignKey(blank=True, db_column='org_of_person_responsible_guid', null=True, on_delete=django.db.models.deletion.PROTECT, to='registries.Organization', verbose_name='Company of person responsible for drilling'),
        ),
        migrations.RunPython(
            code=wells.data_migrations.load_unspecified_coordinate_aquisition_code,
            reverse_code=wells.data_migrations.unload_unspecified_coordinate_aquisition_code,
        ),
        migrations.RemoveField(
            model_name='activitysubmission',
            name='drilling_method',
        ),
        migrations.RemoveField(
            model_name='activitysubmission',
            name='other_drilling_method',
        ),
        migrations.RemoveField(
            model_name='well',
            name='drilling_method',
        ),
        migrations.RemoveField(
            model_name='well',
            name='other_drilling_method',
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='drilling_methods',
            field=models.ManyToManyField(blank=True, to='wells.DrillingMethodCode', verbose_name='Drilling Methods'),
        ),
        migrations.AddField(
            model_name='well',
            name='drilling_methods',
            field=models.ManyToManyField(blank=True, to='wells.DrillingMethodCode', verbose_name='Drilling Methods'),
        ),
        migrations.RemoveField(
            model_name='activitysubmission',
            name='development_method',
        ),
        migrations.RemoveField(
            model_name='well',
            name='development_method',
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='development_methods',
            field=models.ManyToManyField(blank=True, to='wells.DevelopmentMethodCode', verbose_name='Development Methods'),
        ),
        migrations.AddField(
            model_name='well',
            name='development_methods',
            field=models.ManyToManyField(blank=True, to='wells.DevelopmentMethodCode', verbose_name='Development Methods'),
        ),
        migrations.RenameField(
            model_name='activitysubmission',
            old_name='backfill_material',
            new_name='decommission_backfill_material',
        ),
        migrations.RenameField(
            model_name='activitysubmission',
            old_name='sealant_material',
            new_name='decommission_sealant_material',
        ),
        migrations.RemoveField(
            model_name='well',
            name='backfill_material',
        ),
        migrations.RemoveField(
            model_name='well',
            name='sealant_material',
        ),
        migrations.AddField(
            model_name='well',
            name='decommission_backfill_material',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Decommission Backfill Material'),
        ),
        migrations.AddField(
            model_name='well',
            name='decommission_sealant_material',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Decommission Sealant Material'),
        ),
        migrations.RunPython(
            code=wells.data_migrations.insert_unk_well_class_code,
            reverse_code=wells.data_migrations.revert_unk_well_class_code,
        ),
        migrations.RunPython(
            code=wells.data_migrations.load_other_code_values,
            reverse_code=wells.data_migrations.unload_other_code_values,
        ),
        migrations.CreateModel(
            name='WellPublicationStatusCode',
            fields=[
                ('create_user', models.CharField(max_length=60)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=60, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('well_publication_status_code', models.CharField(editable=False, max_length=20, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255)),
                ('display_order', models.PositiveIntegerField()),
                ('effective_date', models.DateTimeField()),
                ('expiry_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'well_publication_status_code',
                'ordering': ['display_order', 'well_publication_status_code'],
            },
        ),
        migrations.RunPython(
            code=wells.data_migrations.load_well_publication_status,
            reverse_code=wells.data_migrations.unload_well_publication_status,
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='well_publication_status',
            field=models.ForeignKey(db_column='well_publication_status_code', default='Published', on_delete=django.db.models.deletion.CASCADE, to='wells.WellPublicationStatusCode', verbose_name='Well Publication Status'),
        ),
        migrations.AddField(
            model_name='well',
            name='well_publication_status',
            field=models.ForeignKey(db_column='well_publication_status_code', default='Published', on_delete=django.db.models.deletion.CASCADE, to='wells.WellPublicationStatusCode', verbose_name='Well Publication Status'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='alternative_specs_submitted',
            field=models.BooleanField(choices=[(False, 'No'), (True, 'Yes')], default=False, verbose_name='Alternative specs submitted (if required)'),
        ),
        migrations.CreateModel(
            name='AquiferLithologyCode',
            fields=[
                ('create_user', models.CharField(max_length=60)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=60, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('aquifer_lithology_code', models.CharField(db_column='aquifer_lithology_code', max_length=100, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
                ('display_order', models.PositiveIntegerField()),
                ('effective_date', models.DateTimeField(blank=True, null=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Aquifer Lithology Codes',
                'db_table': 'aquifer_lithology_code',
                'ordering': ['display_order', 'aquifer_lithology_code'],
            },
        ),
        migrations.RunPython(
            code=wells.data_migrations.load_aquifer_lithology_code_values,
            reverse_code=wells.data_migrations.unload_aquifer_lithology_code_values,
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='aquifer_lithology',
            field=models.ForeignKey(blank=True, db_column='aquifer_lithology_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.AquiferLithologyCode', verbose_name='Aquifer Lithology'),
        ),
        migrations.AddField(
            model_name='well',
            name='aquifer_lithology',
            field=models.ForeignKey(blank=True, db_column='aquifer_lithology_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='wells.AquiferLithologyCode', verbose_name='Aquifer Lithology'),
        ),
        migrations.AddField(
            model_name='well',
            name='geom',
            field=django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=3005, verbose_name='Geo-referenced Location of the Well'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='aquiferlithologycode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='aquiferlithologycode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='aquiferlithologycode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='aquiferlithologycode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='aquiferwell',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='aquiferwell',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='bcgs_numbers',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='bcgs_numbers',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='casing',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='casing',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='casingcode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='casingcode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='casingcode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='casingcode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='casingmaterialcode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='casingmaterialcode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='casingmaterialcode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='casingmaterialcode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='coordinateacquisitioncode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='coordinateacquisitioncode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='coordinateacquisitioncode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='coordinateacquisitioncode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='decommissiondescription',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='decommissiondescription',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='decommissionmaterialcode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='decommissionmaterialcode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='decommissionmaterialcode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='decommissionmaterialcode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='decommissionmethodcode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='decommissionmethodcode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='decommissionmethodcode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='decommissionmethodcode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='developmentmethodcode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='developmentmethodcode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='developmentmethodcode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='developmentmethodcode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='drillingcompany',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='drillingcompany',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='drillingmethodcode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='drillingmethodcode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='drillingmethodcode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='drillingmethodcode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='filterpackmaterialcode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='filterpackmaterialcode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='filterpackmaterialcode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='filterpackmaterialcode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='filterpackmaterialsizecode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='filterpackmaterialsizecode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='filterpackmaterialsizecode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='filterpackmaterialsizecode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='groundelevationmethodcode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='groundelevationmethodcode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='groundelevationmethodcode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='groundelevationmethodcode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='hydraulicproperty',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='hydraulicproperty',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='intendedwaterusecode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='intendedwaterusecode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='intendedwaterusecode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='intendedwaterusecode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='landdistrictcode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='landdistrictcode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='landdistrictcode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='landdistrictcode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='licencedstatuscode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='licencedstatuscode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='licencedstatuscode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='licencedstatuscode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='linermaterialcode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='linermaterialcode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='linermaterialcode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='linermaterialcode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='linerperforation',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='linerperforation',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='lithologydescription',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='lithologydescription',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='ltsaowner',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='ltsaowner',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='obswellstatuscode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='obswellstatuscode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='obswellstatuscode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='obswellstatuscode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='perforation',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='perforation',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='screen',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='screen',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='surfacesealmaterialcode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='surfacesealmaterialcode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='surfacesealmaterialcode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='surfacesealmaterialcode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='surfacesealmethodcode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='surfacesealmethodcode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='surfacesealmethodcode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='surfacesealmethodcode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='waterqualitycharacteristic',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='waterqualitycharacteristic',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='waterqualitycolour',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='waterqualitycolour',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='waterqualitycolour',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='waterqualitycolour',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='well',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='well',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='wellclasscode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='wellclasscode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='wellclasscode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='wellclasscode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='wellpublicationstatuscode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='wellpublicationstatuscode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='wellpublicationstatuscode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='wellpublicationstatuscode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='wellstatuscode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='wellstatuscode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='wellstatuscode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='wellstatuscode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='wellsubclasscode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='wellsubclasscode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='wellsubclasscode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='wellsubclasscode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='wellyieldunitcode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='wellyieldunitcode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='wellyieldunitcode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='wellyieldunitcode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='yieldestimationmethodcode',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='yieldestimationmethodcode',
            name='effective_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='yieldestimationmethodcode',
            name='expiry_date',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='yieldestimationmethodcode',
            name='update_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.RunPython(
            code=wells.data_migrations.update_update_user_fields,
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='aquiferlithologycode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='aquiferwell',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='bcgs_numbers',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='casing',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='casingcode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='casingmaterialcode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='coordinateacquisitioncode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='decommissiondescription',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='decommissionmaterialcode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='decommissionmethodcode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='developmentmethodcode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='drillingcompany',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='drillingmethodcode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='filterpackmaterialcode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='filterpackmaterialsizecode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='groundelevationmethodcode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='hydraulicproperty',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='intendedwaterusecode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='landdistrictcode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='licencedstatuscode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='linermaterialcode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='linerperforation',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='lithologydescription',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='ltsaowner',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='obswellstatuscode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='perforation',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='screen',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='surfacesealmaterialcode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='surfacesealmethodcode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='waterqualitycharacteristic',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='waterqualitycolour',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='well',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='wellclasscode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='wellpublicationstatuscode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='wellstatuscode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='wellsubclasscode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='wellyieldunitcode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.AlterField(
            model_name='yieldestimationmethodcode',
            name='update_user',
            field=models.CharField(default='DATALOAD_USER', max_length=60),
        ),
        migrations.RunSQL(
            sql="SELECT UpdateGeometrySRID('well','geom',4326);",
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='geom',
            field=django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326, verbose_name='Geo-referenced Location of the Well'),
        ),
        migrations.AlterField(
            model_name='well',
            name='geom',
            field=django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326, verbose_name='Geo-referenced Location of the Well'),
        ),
        # If this has been run once, all the way through to production, it's done!
        # migrations.RunPython(
        #     code=wells.data_migrations.update_geom_fields,
        #     reverse_code=wells.data_migrations.reverse_update_geom_fields,
        # ),
        migrations.RemoveField(
            model_name='activitysubmission',
            name='latitude',
        ),
        migrations.RemoveField(
            model_name='activitysubmission',
            name='longitude',
        ),
        migrations.RemoveField(
            model_name='well',
            name='latitude',
        ),
        migrations.RemoveField(
            model_name='well',
            name='longitude',
        ),
        migrations.AlterField(
            model_name='intendedwaterusecode',
            name='description',
            field=models.CharField(max_length=100, verbose_name='Intented Water Use'),
        ),
        migrations.AlterField(
            model_name='licencedstatuscode',
            name='description',
            field=models.CharField(max_length=255, verbose_name='Licenced Status'),
        ),
        migrations.AlterField(
            model_name='wellclasscode',
            name='description',
            field=models.CharField(max_length=100, verbose_name='Well Class'),
        ),
        migrations.AlterField(
            model_name='wellstatuscode',
            name='description',
            field=models.CharField(max_length=255, verbose_name='Well Status'),
        ),
        migrations.AlterField(
            model_name='wellyieldunitcode',
            name='description',
            field=models.CharField(max_length=100, verbose_name='Well Yield Unit'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='aquiferlithologycode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='aquiferwell',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='bcgs_numbers',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='casing',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='casingcode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='casingmaterialcode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='coordinateacquisitioncode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='decommissiondescription',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='decommissionmaterialcode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='decommissionmethodcode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='developmentmethodcode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='drillingcompany',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='drillingmethodcode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='filterpackmaterialcode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='filterpackmaterialsizecode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='groundelevationmethodcode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='hydraulicproperty',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='intendedwaterusecode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='landdistrictcode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='licencedstatuscode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='linermaterialcode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='linerperforation',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='lithologydescription',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='ltsaowner',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='obswellstatuscode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='perforation',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='screen',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='surfacesealmaterialcode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='surfacesealmethodcode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='waterqualitycharacteristic',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='waterqualitycolour',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='well',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='wellclasscode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='wellpublicationstatuscode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='wellstatuscode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='wellsubclasscode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='wellyieldunitcode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='yieldestimationmethodcode',
            name='update_user',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='well',
            name='aquifer',
            field=models.ForeignKey(blank=True, db_column='aquifer_id', null=True, on_delete=django.db.models.deletion.PROTECT, to='aquifers.Aquifer', verbose_name='Aquifer ID Number'),
        ),
    ]
