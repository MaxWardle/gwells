# Generated by Django 2.1.8 on 2019-04-16 20:28

from django.db import migrations, models


import logging


logger = logging.getLogger(__name__)


def fix_bad_wells(apps, schema_editor):
    """ We had a bug in production code, resulting in wells without any audit information. Once this has
    run in production, this migration can be safely removed.
    Don't bother squashing this, just delete it.
    """
    Well = apps.get_model('wells', 'Well')
    ActivitySubmission = apps.get_model('wells', 'ActivitySubmission')
    WellActivityCode = apps.get_model('submissions', 'WellActivityCode')

    # Get all the wells without create_user
    for well in Well.objects.filter(create_user=''):
        try:
            # See if it's a legacy record, if it is - FAIL.
            activity_submission = ActivitySubmission.objects.get(
                well=well,
                well_activity_type=WellActivityCode.objects.get(code='LEGACY'))
            logger.error('Legacy record for bad well exists')
        except ActivitySubmission.DoesNotExist:
            try:
                # Try to get a construction record, then update the well to match the submission.
                activity_submission = ActivitySubmission.objects.get(
                    well=well,
                    well_activity_type=WellActivityCode.objects.get(code='CON'))
                well.create_user = activity_submission.create_user
                well.save()
            except ActivitySubmission.DoesNotExist as e:
                logger.error(e)


def revert_bad_wells(apps, schema_editor):
    # We revert - there's not really a way
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('wells', '0072_merge_20190410_2303'),
    ]

    operations = [
        migrations.RunPython(
            code=fix_bad_wells,
            reverse_code=revert_bad_wells,
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='water_supply_system_name',
            field=models.CharField(blank=True, max_length=80, null=True, verbose_name='Water Supply System Name'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='water_supply_system_well_name',
            field=models.CharField(blank=True, max_length=80, null=True, verbose_name='Water Supply System Well Name'),
        ),
        migrations.AlterField(
            model_name='activitysubmission',
            name='final_casing_stick_up',
            field=models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True, verbose_name='Final Casing Stick Up'),
        ),
    ]
